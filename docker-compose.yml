version: "3"

volumes:
  # volume for db service container
  db-data:

services:
  # node service container: node:12-alpine
  # $ docker-compose run node $command ...
  node:
    # build from ./Dockerfile
    build: ./
    logging:
      driver: json-file
    links:
      - db # link tcp://db => service://db
    ports:
      # http://localhost:32774 => service://node:3000
      - "32774:3000"
      # http://localhost:32775 => service://node:3333
      - "32775:3333"
    volumes:
      # ./package.json => service://node:/package.json (read + write)
      ## $ npm i --prefix '/' => module install in service://node:/node_modules/
      - ./package.json:/package.json:rw
      - ./package-lock.json:/package-lock.json:rw
      
      # ./ => service:node:/work/
      - ./:/work/
    environment:
      TZ: Asia/Tokyo
      # run nuxt server in http://0.0.0.0:3333
      ## $ docker-compose run --service-ports node npm run --prefix ./app/ dev
      HOST: 0.0.0.0
      PORT: 3333

  # db service container: mongo db v4.4
  db:
    image: mongo:4.4
    logging:
      driver: json-file
    # restart: always
    ports:
      # tcp://localhost:<random_port> => service://db:27017
      - "27017"
    volumes:
      # database data persistence
      - db-data:/data/db/
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      TZ: Asia/Tokyo

  # admin service container: mongo-express:latest
  admin:
    image: mongo-express:latest
    logging:
      driver: json-file
    # restart: always
    links:
      - db # link tcp://db => service://db
    ports:
      # http://localhost:32776 => service://admin:8081
      - "32776:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_SERVER: db
      TZ: Asia/Tokyo
